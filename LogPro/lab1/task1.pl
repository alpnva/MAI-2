% Реализация стандартных предикатов обработки списков

% Длина списка
% (список, длина)

Length([], 0).
Length([_ | L], N):-Length(L, M), N is M + 1.

% Принадлежность элемента списку
%(элемент, список)

Member(X, [X | _]).
Member(X, [_ | T]):-Member(X, T).

% Конкатенация списков
%(список1, сипсок2, список1+2)

Append([], L, L).
Append([X, L1], L2, [X | L3]):-Append(L1, L2, L3).

% Удаление элемента из списка
%(элемент, список, список без элемента)

Remove(X, [X | T], T).
Remove(X, [Y | T], [Y | Z]):-Remove(X, T, Z).

% Перестановки элементов в списке
%(список, перестановка)

Permute([], []).
Permute(L, [X | T]):-Delete(X, L, Y), Permute(Y, T).

% Подсписки списка
%(подсписок, список)

Sublist(S, L):-Append(_, L1, L), Append(S, _, L1).

% Вариант 5. Удаление N первых элементов
% Первый параметр - количество элементов, второй - список исходный, третий - список после удаления
    % С использованием стандартных предикатов
    
    % Без использования стандартных предикатов
    delete_n(0, L, L).
    delete_n(_, [], []).
    delete_n(N, [_|T1], L2):- N > 0, N1 is N-1, delete_n(N1, T1, L2).


